# This workflow will build a Java project with Maven
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-maven

name: Java CI with Maven

on:
  push:
    branches: [ dev ]
 
    
defaults:
  run:
    working-directory: ./

jobs:
  build:

    runs-on: ['self-hosted', 'truckDev' ]
    

    steps:
    - uses: actions/checkout@v2
    - name: Set up JDK 11
      uses: actions/setup-java@v2
      with:
        java-version: '11'
        distribution: 'adopt'
    - name: Build with Maven
      run: mvn -B package --file pom.xml -s $GITHUB_WORKSPACE/.mvn/wrapper/settings.xml
      env:
        git_username: ${{ github.actor }}
        git_PAT: ${{ secrets.GITHUB_TOKEN }}
    - run: cd ~/actions-runner/deploy/truckApi/truckApi
    - run: sudo docker container stop truckApiContainer || true
    - run: sudo docker container stop truckPostgres || true
    - run: sudo docker container rm truckApiContainer || true
    - run: sudo docker image rm truck || true
    - run: sudo docker build -t truck .
    - run:  sudo docker container start truckPostgres || sudo docker run --name truckPostgres -e POSTGRES_ROOT_PASSWORD=postgres -e POSTGRES_DATABASE=postgres -e POSTGRES_USER=postgres -e POSTGRES_PASSWORD=postgres -d postgres:alpine 
    - run: sudo docker run -d --env-file /home/ubuntu/test.env -p 9090:9090 --name truckApiContainer --link truckPostgres:postgres truck | echo "success"
